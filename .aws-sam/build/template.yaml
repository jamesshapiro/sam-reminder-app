AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'reminders

  Sample SAM Template for reminders app

  '
Globals:
  Function:
    MemorySize: 128
    Timeout: 60
Parameters:
  NotificationEmail:
    Type: String
    Description: Recipient e-mail address
  NotificationPhone:
    Type: String
    Description: Recipient phone number
Resources:
  CreateReminderFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: CreateReminderFunction
      Handler: create_reminder.lambda_handler
      Runtime: python3.8
      Policies:
      - DynamoDBWritePolicy:
          TableName:
            Ref: RemindersDDBTable
      Layers:
      - Ref: ULIDLayer
      Environment:
        Variables:
          REMINDERS_DDB_TABLE:
            Ref: RemindersDDBTable
      Events:
        CreateReminderAPIWithKeyRequired:
          Type: Api
          Properties:
            RestApiId:
              Ref: CreateReminderApi
            Path: /remind/
            Method: post
            Auth:
              ApiKeyRequired: true
  CreateReminderApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        ApiKeyRequired: true
  CreateReminderApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Enabled: true
  CreateReminderUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      ApiStages:
      - ApiId:
          Ref: CreateReminderApi
        Stage: Prod
  CreateReminderUsagePlanKeyAssocation:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId:
        Ref: CreateReminderApiKey
      KeyType: API_KEY
      UsagePlanId:
        Ref: CreateReminderUsagePlan
  SendRemindersFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: SendRemindersFunction
      Handler: send_reminders.lambda_handler
      Runtime: python3.8
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: RemindersDDBTable
      - SNSPublishMessagePolicy:
          TopicName:
            Fn::GetAtt:
            - RemindersTopic
            - TopicName
      Layers:
      - Ref: ULIDLayer
      Environment:
        Variables:
          REMINDERS_DDB_TABLE:
            Ref: RemindersDDBTable
          REMINDERS_TOPIC:
            Ref: RemindersTopic
      Events:
        CheckForReminders:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
  CreateReminderFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
        - ''
        - - /aws/lambda/
          - Ref: CreateReminderFunction
  RemindersDDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: PK1
        AttributeType: S
      - AttributeName: SK1
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      ContributorInsightsSpecification:
        Enabled: true
      KeySchema:
      - AttributeName: PK1
        KeyType: HASH
      - AttributeName: SK1
        KeyType: RANGE
  ULIDLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: ULIDLayer
      Description: Reminder Dependencies
      ContentUri: ../../src
      CompatibleRuntimes:
      - python3.7
      - python3.8
      LicenseInfo: MIT
      RetentionPolicy: Retain
  RemindersTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Protocol: email
        Endpoint:
          Ref: NotificationEmail
      - Protocol: sms
        Endpoint:
          Ref: NotificationPhone
Outputs:
  ULIDLayer:
    Value:
      Ref: ULIDLayer
    Description: ARN For AWS ULIDLayer
  ReminderApi:
    Description: API Gateway endpoint URL for Prod stage for Reminder function
    Value:
      Fn::Sub: https://${CreateReminderApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/remind/
  APIKey:
    Description: API Key for client use
    Value:
      Ref: CreateReminderApiKey
